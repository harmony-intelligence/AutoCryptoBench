name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '.python-version'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '.python-version'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Setup environment file
      run: cp .env.clone .env

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.uv/bin" >> "$GITHUB_PATH"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Check that uv.lock and pyproject.toml are in sync
      run: uv lock --locked --offline

    - name: Install dependencies
      run: uv sync --dev

    - name: Build the desktop_base image
      uses: docker/build-push-action@v5
      with:
        context: ./docker/desktop_base
        file: ./docker/desktop_base/Dockerfile
        push: false
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move Docker cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Run tests
      run: uv run pytest --color=yes
